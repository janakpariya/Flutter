import 'package:flutter/material.dart';

void main() {
  runApp(Main());
}

class Main extends StatelessWidget {
  Main({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner:false,
      home: Color(),
    );
  }
}

class Color extends StatefulWidget {

  const Color({Key? key}) : super(key: key);

  @override
  State<Color> createState() => _ColorState();
}

class _ColorState extends State<Color> {

  var store;
  TextEditingController _color = TextEditingController();
  Map<String, dynamic> pos = {
    'white' : Colors.white,
    'green' : Colors.green,
    'blue' : Colors.blue,
    'red' : Colors.red,
    'yellow' : Colors.yellow,
    'black' : Colors.black,
  };

  @override
  void initState() {
    super.initState();
  }

  @override
  Widget build(BuildContext context) {

    final size = MediaQuery.of(context).size;
    final width = size.width;
    final height = size.height;

    return Scaffold(
      backgroundColor: store,
      floatingActionButton: FloatingActionButton(
        tooltip: 'Color',
        backgroundColor: Colors.deepPurple,
        child: Icon(Icons.add,),
        onPressed: () {
          showDialog(
              context: context,
              builder: (BuildContext context) {
                return AlertDialog(
                  actions: <Widget>[

                    Container(width: 100,),

                    Container(
                      padding: EdgeInsets.all(20),
                      child: TextField(
                        controller: _color,
                        decoration: InputDecoration(
                          labelText: 'Enter Color',
                          border: OutlineInputBorder(),
                        ),
                      ),
                    ),

                    Container(
                      padding: EdgeInsets.only(left: 20, right: 20),
                      child: Row(
                        children: [

                          Expanded(
                            child: ElevatedButton(
                              onPressed: () {
                                Navigator.pop(context);
                              },
                              child: Icon(Icons.close),
                            ),
                          ),

                          SizedBox(width: width * 0.10,),

                          Expanded(
                            child: ElevatedButton(
                              onPressed: () {
                                _checkColor();
                              },
                              child: Icon(Icons.save),
                            ),
                          ),

                        ],
                      ),
                    ),
                  ],
                );
              },
            );
          },
      ),
    );
  }

  void _checkColor() {
    if(pos.containsKey(_color.text)) {
      setState(() {
        store = pos[_color.text];
      });
      Navigator.pop(context);
    } else {
      Navigator.pop(context);
    }
  }
}

